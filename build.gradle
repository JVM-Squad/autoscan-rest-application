import io.franzbecker.gradle.lombok.task.DelombokTask

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "com.diffplug.eclipse.apt" version "3.28.0"
    id "io.micronaut.library" version '1.5.0'
    id "org.sonarqube" version "3.2.0"
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
    id 'jacoco'
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

allprojects {
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    repositories {
        mavenCentral()

        maven {
            url 'https://oss.sonatype.org/service/local/repositories/releases/content/'
            mavenContent{
                releasesOnly()
            }
        }
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
            mavenContent{
                snapshotsOnly()
            }
        }
    }

    sonarqube {
        properties {
            property "sonar.projectKey", "FinTrack:API"
            property "sonar.organization", "jongsoft"
            property "sonar.host.url", "https://sonarcloud.io"
            property "sonar.jacoco.reportPaths", "${buildDir}/reports/jacoco/report.xml"
            property "sonar.exclusions", "**/*Test.java"
        }
    }

    dependencies {
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"

        compileOnly "org.projectlombok:lombok:$lombokVersion"

        testCompileOnly "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    }
}

subprojects {
    apply plugin: 'jacoco'
    apply plugin: 'io.franzbecker.gradle-lombok'

    /**
     * Compiler configuration
     */

    java {
        compileJava.options.encoding = 'UTF-8'
        sourceCompatibility = JavaVersion.toVersion("16")
        targetCompatibility = JavaVersion.toVersion("16")

        withJavadocJar()
        withSourcesJar()
    }

    micronaut {
        runtime "jetty"
        testRuntime "junit5"
        processing {
            incremental(true)
            annotations("com.jongsoft.finance.*")
        }
    }

    /**
     * Test configuration Section
     */
    test {
        useJUnitPlatform()

        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test

        reports {
            xml.enabled true
            xml.destination file("${buildDir}/reports/jacoco/report.xml")
            csv.enabled false
            html.enabled false
        }
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = 0.6
                }
            }
        }
    }

    /**
     * Publishing configuration
     */

    task delombok(type: DelombokTask, dependsOn: compileJava) {
        enabled = isReleaseVersion
        ext.outputDir = file("$buildDir/delombok")
        outputs.dir(outputDir)
        sourceSets.main.java.srcDirs.each {
            inputs.dir(it)
            args(it, "-d", outputDir)
        }
        doFirst {
            outputDir.deleteDir()
        }
    }

    javadoc {
        dependsOn delombok

        enabled = isReleaseVersion
        source = delombok.outputDir

        options.addBooleanOption('html5', true)
        options.addStringOption('-release', '16')
    }

    publishing {
        repositories {
            maven {
                def releaseRepo = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotRepo = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = isReleaseVersion ? releaseRepo : snapshotRepo
                credentials {
                    username = System.getenv('OSSRH_USERNAME')
                    password = System.getenv('OSSRH_PASSWORD')
                }
            }
        }

        publications {
            mavenJava(MavenPublication) {
                from components.java
                pom {
                    description = 'The REST-API for FinTrack'
                    url = 'https://fintrack.jongsoft.com/'
                    name = project.name
                    scm {
                        connection = 'scm:git:git@bitbucket.org:jongsoftdev/fintrack-application.git'
                        developerConnection = 'scm:git:git@bitbucket.org:jongsoftdev/fintrack-application.git'
                        url = 'https://bitbucket.org/jongsoftdev/fintrack-application/src/master/'
                    }
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'http://www.opensource.org/licenses/mit-license.php'
                        }
                    }
                    developers {
                        developer {
                            id = 'gjong'
                            name = 'Gerben Jongerius'
                            email = 'g.jongerius@jong-soft.com'
                        }
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    dependencies {
        implementation("io.micronaut:micronaut-inject")
        implementation("io.micronaut:micronaut-validation")
        implementation("io.micronaut:micronaut-runtime")
        implementation("javax.annotation:javax.annotation-api")
        implementation("io.micronaut:micronaut-http-client")

        implementation("ch.qos.logback:logback-classic")
        implementation("com.jongsoft.lang:language:$jongsoftLangVersion")

        testImplementation "org.junit.jupiter:junit-jupiter-api"
        testImplementation "io.micronaut.test:micronaut-test-junit5"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
        testImplementation("io.micronaut:micronaut-inject-java")
        testImplementation("org.assertj:assertj-core:$assertjVersion")
        testImplementation("org.mockito:mockito-core:$mockitoVersion")
    }
}
