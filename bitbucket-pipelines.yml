image: openjdk:14

pipelines:
  default:
    - step:
        caches:
          - gradle
        script:
          - bash ./gradlew classes

  tags:
    release-*:
      - step:
          name: Prepare signing key
          script:
            - echo "$SIGNING_KEY" > private-key.gpg.enc
            - openssl aes-256-cbc -a -k $SIGNING_PWD -in private-key.gpg.enc -out signing-key -d
            - gpg --import signing-key
            - shred signing-key
      - step:
          name: Build
          caches:
            - gradle
          script:
            - bash ./gradlew clean build
            - bash ./gradlew publish -Psigning.keyId=$GPG_KEY -Psigning.password=$GPG_PASSWORD

  pull-requests:
    feature/*:
      - step:
          caches:
            - gradle
          script:
            - bash ./gradlew check jacocoTestReport
            - bash ./gradlew sonarqube

  branches:
    master:
      - step:
          caches:
            - gradle
          script:
            - bash ./gradlew check jacocoTestReport
          artifacts:
            - ./**/build/**
          after-script:
            - bash <(curl -s https://codecov.io/bash) -s "*/build/reports/*" -f '*report.xml'
      - parallel:
          - step:
              name: Deploy snapshot
              script:
                - echo "$SIGNING_KEY" > private-key.gpg.enc
                - openssl aes-256-cbc -a -k $SIGNING_PWD -in private-key.gpg.enc -out signing-key -d
                - gpg --import signing-key
                - shred signing-key
                - bash ./gradlew publish -Psigning.keyId=$GPG_KEY -Psigning.password=$GPG_PASSWORD
          - step:
              name: Quality gate
              script:
                - bash ./gradlew sonarqube
